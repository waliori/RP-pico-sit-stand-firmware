import numpy as np

# Simulate data input
moving_data = [    
((0.01915361, -1.568202, 8.961497),(-0.01865238, 0.06235225, -0.2681946)),((0.03591302, -1.565808, 9.25359),(-0.03144258, 0.06448395, -0.2687275)),((0.02873042, -1.606509, 9.0429),(-0.02784534, 0.06395102, -0.2708592)),((0.1005565, -1.745373, 9.081207),(-0.02065085, 0.06741504, -0.2671288)),((0.07182605, -1.42455, 9.097966),(-0.02784534, 0.06208578, -0.2685943)),((0.1173159, -1.218649, 9.713276),(-0.02957735, 0.0634181, -0.2645974)),((0.1005565, -1.074997, 9.708488),(-0.01905208, 0.05982085, -0.2643309)),((0.2082956, -1.400608, 9.883265),(-0.01372282, 0.06581626, -0.2695269)),((0.04788403, -1.216254, 9.303867),(-0.02971058, 0.05888824, -0.2693937)),((0.1292869, -1.692701, 9.25359),(-0.02158347, 0.06048701, -0.2675284)),((0.03351882, -1.520318, 9.399636),(-0.03050997, 0.06741504, -0.2677949)),((0.07422025, -1.436521, 9.066842),(-0.02571364, 0.06368456, -0.2679281)),((-0.03591302, -1.496376, 9.074024),(-0.01425575, 0.06328487, -0.2681946)),((0.07422025, -1.623269, 9.296685),(-0.01412252, 0.05662331, -0.2709925)),((0.2442086, -1.54426, 9.102755),(-0.02438133, 0.05902146, -0.2657964)),((-0.09576806, -1.266533, 9.095572),(-0.02611333, 0.0634181, -0.2711257)),((-0.1699883, -1.42455, 9.73243),(-0.02664626, 0.0698132, -0.2628653)),((0.02633622, -1.197101, 9.629479),(-0.02611333, 0.06568303, -0.2695269)),((0.01436521, -1.625663, 9.198523),(-0.02105054, 0.06714857, -0.26553)),((-0.1436521, -1.912967, 9.150639),(-0.019585, 0.06501687, -0.2681946)),((-0.05267244, -1.446098, 9.445126),(-0.01678714, 0.06022055, -0.2685943)),((0.2274492, -1.477222, 9.258378),(-0.01771976, 0.05808885, -0.2700598)),((-0.06224924, -1.541866, 9.466674),(-0.01918531, 0.05835531, -0.2687275)),((0.05267244, -1.070208, 9.437943),(-0.02038439, 0.06781473, -0.2659297)),((-0.04309563, -1.273715, 10.00776),(-0.01811946, 0.06395102, -0.2676617)),((-0.007182605, -1.355118, 8.99741),(-0.01732007, 0.06501687, -0.2696601)),((0.1316811, -1.551443, 9.409213),(-0.02624657, 0.06035378, -0.2723248)),((0.06464344, -1.400608, 9.184157),(-0.02105054, 0.05942116, -0.2701931)),((0.04548983, -1.527501, 9.382876),(-0.01718684, 0.06248548, -0.2676617)),((0.01675941, -1.388637, 9.303867),(-0.02051762, 0.05995408, -0.2661961)),((0.1053449, -1.458069, 9.246407),(-0.01878561, 0.05968762, -0.2639312)),((0.03830723, -1.486799, 9.294291),(-0.02145024, 0.06288517, -0.2729909)),((0.06224924, -1.458069, 9.208099),(-0.01598775, 0.05928793, -0.2625989)),((0.05746084, -1.438915, 9.258378),(-0.02291578, 0.06301841, -0.2661961)),((0.04548983, -1.482011, 9.287108),(-0.02291578, 0.06728181, -0.2647306)),((0.08140286, -1.489193, 9.301474),(-0.02371517, 0.06088671, -0.267262)),((-0.1221043, -0.9624691, 9.088389),(-0.009192959, 0.05715622, -0.2711257)),((-0.2154782, -1.917756, 8.851364),(-0.02131701, 0.05715622, -0.2728577)),((-0.1125275, -1.321599, 8.157045),(-0.0127902, 0.06594949, -0.2651303)),((0.1221043, -1.343147, 10.22324),(-0.02571364, 0.06235225, -0.2708592)),((0.1963245, -1.211466, 9.006987),(-0.02451456, 0.06208578, -0.268994)),((-0.3519476, -1.297657, 9.157822),(-0.02971058, 0.07101228, -0.2701931)),((0.2920926, -1.501164, 9.306262),(-0.02105054, 0.06355133, -0.2665958)),((0.05506664, -1.225831, 9.737218),(0.000932619, 0.06008732, -0.2687275)),((0.1987187, -1.63524, 10.14423),(-0.02291578, 0.06328487, -0.2664626)),((-0.06224924, -1.520318, 8.999804),(-0.02358194, 0.05582391, -0.2685943)),((0.2633622, -1.376666, 8.793902),(-0.02224962, 0.05942116, -0.2677949)),((0.01436521, -1.345541, 9.598354),(-0.0238484, 0.06475041, -0.2648638)),((-0.03351882, -1.434127, 9.437943),(-0.02051762, 0.0612864, -0.2725912)),((0.04788403, -1.283292, 9.299079),(-0.01918531, 0.06022055, -0.2691272)),((0.01675941, -1.505953, 9.157822),(-0.01918531, 0.06261871, -0.2644641)),((0.05506664, -1.482011, 9.241618),(-0.02224962, 0.05582391, -0.2717918)),((0.1053449, -1.47004, 9.227253),(-0.01878561, 0.06075347, -0.2665958)),((0.1101333, -1.434127, 9.234436),(-0.02304901, 0.06275194, -0.268994)),((0.05985504, -1.479617, 9.306262),(-0.0238484, 0.06221901, -0.2685943))
]

stationary_data = [((0.05027823, -1.431733, 9.263166),(-0.02131701, 0.0655498, -0.2687275)),((0.05267244, -1.482011, 9.287108),(-0.02051762, 0.05768915, -0.2688608)),((0.07182605, -1.47004, 9.277532),(-0.02304901, 0.06261871, -0.2687275)),((0.02873042, -1.482011, 9.251195),(-0.02091732, 0.06088671, -0.2640644)),((0.08619126, -1.45328, 9.246407),(-0.02291578, 0.06235225, -0.2657964)),((0.06464344, -1.446098, 9.251195),(-0.02544718, 0.06168609, -0.2685943)),((0.05267244, -1.448492, 9.270349),(-0.02558041, 0.06008732, -0.2684611)),((0.04070143, -1.467646, 9.272743),(-0.02371517, 0.06075347, -0.2673952)),((0.07661445, -1.438915, 9.289502),(-0.02478102, 0.06435072, -0.2704595)),((0.08379706, -1.460463, 9.287108),(-0.02278255, 0.06501687, -0.2720583)),((0.06464344, -1.462857, 9.25359),(-0.0217167, 0.0548913, -0.2713922)),((0.04788403, -1.446098, 9.196129),(-0.02677949, 0.06421748, -0.2639312)),((0.06943185, -1.441309, 9.299079),(-0.01985146, 0.06261871, -0.2699266)),((0.02154782, -1.441309, 9.267955),(-0.02011793, 0.05822208, -0.2677949)),((0.05027823, -1.491588, 9.299079),(-0.02264932, 0.06088671, -0.2685943)),((0.05506664, -1.45328, 9.260772),(-0.02145024, 0.06461718, -0.2676617)),((0.05027823, -1.47004, 9.318233),(-0.019585, 0.06075347, -0.2683278)),((0.03830723, -1.446098, 9.220071),(-0.02131701, 0.06022055, -0.2669955)),((0.06224924, -1.472434, 9.284714),(-0.02504748, 0.05808885, -0.2663293)),((0.09337386, -1.491588, 9.263166),(-0.02051762, 0.06315164, -0.2680614)),((0.01915361, -1.426944, 9.244013),(-0.02331548, 0.06008732, -0.2692604)),((0.05506664, -1.443704, 9.23683),(-0.02411487, 0.05968762, -0.2699266)),((0.04070143, -1.412579, 9.287108),(-0.0217167, 0.06301841, -0.2699266)),((0.05027823, -1.438915, 9.275137),(-0.02025116, 0.05742269, -0.2656632)),((0.06703765, -1.426944, 9.255983),(-0.01985146, 0.05955439, -0.263265)),((0.04309563, -1.443704, 9.203311),(-0.02105054, 0.06421748, -0.2691272)),((0.02633622, -1.458069, 9.291897),(-0.0174533, 0.05942116, -0.272458)),((0.02394202, -1.441309, 9.232041),(-0.02318225, 0.06235225, -0.2727245)),((0.007182605, -1.462857, 9.248801),(-0.01838592, 0.05715622, -0.2648638)),((0.03830723, -1.434127, 9.244013),(-0.02251609, 0.06168609, -0.2711257)),((0.06943185, -1.450886, 9.267955),(-0.0238484, 0.06448395, -0.2671288)),((0.004788403, -1.472434, 9.200917),(-0.02224962, 0.05848854, -0.2657964)),((0.07661445, -1.455675, 9.215282),(-0.02251609, 0.06275194, -0.2685943)),((0.05985504, -1.45328, 9.267955),(-0.02371517, 0.06075347, -0.2703263)),((0.05985504, -1.465251, 9.270349),(-0.01998469, 0.06141963, -0.2699266)),((0.07182605, -1.443704, 9.25359),(-0.02211639, 0.05968762, -0.2688608)),((0.06224924, -1.431733, 9.260772),(-0.01838592, 0.06261871, -0.2648638)),((0.07182605, -1.443704, 9.270349),(-0.01811946, 0.06608272, -0.2668623)),((0.1053449, -1.462857, 9.26556),(-0.01825269, 0.06395102, -0.2680614)),((0.05267244, -1.450886, 9.255983),(-0.02065085, 0.05808885, -0.2696601)),((0.05267244, -1.489193, 9.23683),(-0.0217167, 0.06395102, -0.2661961)),((0.08140286, -1.462857, 9.313444),(-0.02304901, 0.06101994, -0.2719251)),((0.05506664, -1.496376, 9.25359),(-0.02051762, 0.06181932, -0.2648638)),((0.04788403, -1.47004, 9.313444),(-0.01998469, 0.06035378, -0.2729909)),((0.02154782, -1.458069, 9.248801),(-0.02038439, 0.0591547, -0.2719251)),((0.05746084, -1.513135, 9.279925),(-0.02211639, 0.07047935, -0.2683278)),((0.06703765, -1.37906, 9.28232),(-0.02304901, 0.06448395, -0.2683278)),((0.02394202, -1.47004, 9.299079),(-0.02278255, 0.06221901, -0.2675284)),((0.02873042, -1.422156, 9.320627),(-0.02251609, 0.06235225, -0.2683278)),((0.06464344, -1.42455, 9.26556),(-0.02091732, 0.05955439, -0.2671288)),((-0.02873042, -1.45328, 9.277532),(-0.02624657, 0.06115317, -0.2681946)),((0.02873042, -1.446098, 9.279925),(-0.0149219, 0.06541657, -0.2659297)),((0.03112462, -1.393425, 9.248801),(-0.01905208, 0.06355133, -0.2647306)),((0.03830723, -1.482011, 9.291897),(-0.01705361, 0.05835531, -0.2659297)),((0.09816227, -1.436521, 9.294291),(-0.02184993, 0.06515011, -0.2696601)),((0.007182605, -1.448492, 9.272743),(-0.02531395, 0.05955439, -0.267262)),((0.01675941, -1.450886, 9.31105),(-0.01865238, 0.06541657, -0.2691272)),((0.1029507, -1.426944, 9.330204),(-0.02251609, 0.05688977, -0.2661961)),((0.01915361, -1.419762, 9.251195),(-0.01945177, 0.06155286, -0.272458)),((0.04548983, -1.441309, 9.258378),(-0.02131701, 0.06168609, -0.2673952))
]

def calculate_magnitude(data):
    """Calculate the magnitude of vectors provided in data"""
    return [np.sqrt(sum(np.square(x))) for x in data]

def analyze_data(data):
    """Analyze the data to calculate mean and standard deviation"""
    magnitudes = calculate_magnitude(data)
    mean = np.mean(magnitudes)
    std_dev = np.std(magnitudes)
    return mean, std_dev

def main(moving_data, stationary_data):
    # Extract acceleration and gyro data for moving and stationary conditions
    moving_accel = [x[0] for x in moving_data]
    moving_gyro = [x[1] for x in moving_data]
    
    stationary_accel = [x[0] for x in stationary_data]
    stationary_gyro = [x[1] for x in stationary_data]
    
    # Analyze acceleration data
    moving_accel_mean, moving_accel_std = analyze_data(moving_accel)
    stationary_accel_mean, stationary_accel_std = analyze_data(stationary_accel)
    
    # Analyze gyro data
    moving_gyro_mean, moving_gyro_std = analyze_data(moving_gyro)
    stationary_gyro_mean, stationary_gyro_std = analyze_data(stationary_gyro)
    
    # Suggested thresholds
    soft_threshold = stationary_accel_mean + 2 * stationary_accel_std
    hard_threshold = moving_accel_mean + moving_accel_std
    gyro_threshold = max(stationary_gyro_mean + 2 * stationary_gyro_std, moving_gyro_std)
    
    print(f"Soft Threshold: {soft_threshold}")
    print(f"Hard Threshold: {hard_threshold}")
    print(f"Gyro Threshold: {gyro_threshold}")

# Populate moving_data and stationary_data with your actual data first
# Then call main function
main(moving_data, stationary_data)
